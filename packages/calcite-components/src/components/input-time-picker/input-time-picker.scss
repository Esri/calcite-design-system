/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 * 
 * @prop --calcite-input-time-picker-background-color: Specifies the background color of the component.
 * @prop --calcite-input-time-picker-border-color: Specifies the component's border color.
 * @prop --calcite-input-time-picker-icon-color: Specifies the component's icon color.
 * @prop --calcite-input-time-picker-icon-color-hover: Specifies the component's icon color when hovered.
 * @prop --calcite-input-time-picker-shadow: Specifies the component's shadow.
 * @prop --calcite-input-time-picker-corner-radius: Specifies the border radius of the component.
 
 * @prop --calcite-input-time-picker-input-background-color: Specifies the component's input background color.
 * @prop --calcite-input-time-picker-input-text-color: Specifies the component's input text color.
 * @prop --calcite-input-time-picker-input-shadow: Specifies the component's input shadow.
 * @prop --calcite-input-time-picker-input-corner-radius: Specifies the border radius of the component's input.
 * @prop --calcite-input-time-picker-input-border-color: Specifies the component's input border color.

 * @prop --calcite-input-time-picker-digit-text-color: Specifies the component's digit text color.
 * @prop --calcite-input-time-picker-digit-icon-color: Specifies the component's digit icon color.
 * @prop --calcite-input-time-picker-digit-border-color-press: Specifies the component's digit border color when pressed.
 * @prop --calcite-input-time-picker-digit-border-color-hover: Specifies the component's digit border color when hovered.

 * @prop --calcite-input-time-picker-action-background-color-hover: Specifies the background color of the component's actions when hovered or focused.
 * @prop --calcite-input-time-picker-action-background-color-press: Specifies the background color of the component's actions when active.
 */

:host {
  display: inline-block;
}

@include disabled();
@include hidden-form-input();

@function get-trailing-text-input-padding($chevron-spacing) {
  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);
}

calcite-time-picker {
  --calcite-time-picker-color: var(--calcite-input-time-picker-digit-text-color);
  --calcite-time-picker-icon-color: var(--calcite-input-time-picker-digit-icon-color);
  --calcite-time-picker-button-background-color-hover: var(--calcite-input-time-picker-action-background-color-hover);
  --calcite-time-picker-button-background-color-press: var(--calcite-input-time-picker-action-background-color-press);
  --calcite-time-picker-input-border-color-hover: var(--calcite-input-time-picker-digit-border-color-hover);
  --calcite-time-picker-input-border-color-press: var(--calcite-input-time-picker-digit-border-color-press);
}

.container {
  --calcite-icon-color: var(--calcite-input-time-picker-icon-color, var(--calcite-color-text-3));
  align-items: center;
  background-color: var(--calcite-input-time-picker-input-background-color, var(--calcite-color-foreground-1));
  border: 1px solid var(--calcite-input-time-picker-input-border-color, var(--calcite-color-border-input));
  border-radius: var(--calcite-input-time-picker-input-corner-radius, var(--calcite-corner-radius-none));
  box-shadow: var(--calcite-input-time-picker-input-shadow, var(--calcite-shadow-none));
  box-sizing: border-box;
  display: flex;
  color: var(--calcite-input-time-picker-input-text-color, var(--calcite-color-text-1));
  flex-wrap: nowrap;
  font-weight: var(--calcite-font-weight-normal);
  inline-size: 100%;
  padding-block: var(--calcite-spacing-base);
  user-select: none;

  &:focus-within {
    border-color: var(--calcite-color-brand);
    @apply focus-inset;
  }

  &.read-only {
    background-color: var(--calcite-color-background);
    font-weight: var(--calcite-font-weight-medium);
  }
}

.input-container {
  display: flex;
  flex-grow: 1;
}

.input {
  align-items: center;
  display: flex;
  block-size: 100%;
  justify-content: center;
  min-inline-size: max-content;
  &.empty {
    inline-size: var(--calcite-spacing-xl);
  }
  &:focus,
  &:hover:focus {
    background-color: Highlight;
    color: HighlightText;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.toggle-icon {
  align-items: center;
  block-size: 24px;
  cursor: pointer;
  display: flex;
  inline-size: 24px;
  justify-content: center;
  &:hover {
    --calcite-icon-color: var(--calcite-input-time-picker-icon-color-hover);
  }
}

.meridiem--start {
  margin-inline-end: var(--calcite-spacing-xxs);
}
.meridiem--end {
  margin-inline-start: var(--calcite-spacing-xxs);
}

:host([scale="s"]) {
  .container {
    block-size: 1.5rem;
    font-size: var(--calcite-font-size-sm);
    gap: var(--calcite-spacing-sm);
    padding-inline-start: var(--calcite-spacing-sm);
    padding-inline-end: var(--calcite-spacing-xxs);
  }
  .input-container {
    line-height: 1rem;
  }
}

:host([scale="m"]) {
  .container {
    block-size: 2rem;
    font-size: var(--calcite-font-size);
    gap: var(--calcite-spacing-md);
    padding-inline-start: var(--calcite-spacing-md);
    padding-inline-end: var(--calcite-spacing-sm);
  }
  .input-container {
    line-height: 1.5rem;
  }
}

:host([scale="l"]) {
  .container {
    block-size: 2.75rem;
    font-size: var(--calcite-font-size-md);
    gap: var(--calcite-spacing-lg);
    padding-inline: var(--calcite-spacing-lg);
  }
  .input-container {
    line-height: 2.25rem;
  }
}

:host([status="invalid"]) {
  .container {
    border-color: var(--calcite-color-status-danger);
    &:focus-within {
      @apply focus-inset-danger;
    }
  }
}

calcite-time-picker {
  --calcite-time-picker-background-color: var(--calcite-input-time-picker-background-color);
  --calcite-time-picker-border-color: var(--calcite-input-time-picker-border-color, transparent);
  --calcite-time-picker-corner-radius: var(
    --calcite-input-time-picker-corner-radius,
    var(--calcite-corner-radius-round)
  );
}

calcite-popover {
  --calcite-popover-corner-radius: var(--calcite-input-time-picker-corner-radius, var(--calcite-corner-radius-round));
}

@include form-internal-label();
@include form-validation-message();
@include base-component();
