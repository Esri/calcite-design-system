/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-input-prefix-size: Specifies the component's prefix width.
 * @prop --calcite-input-suffix-size: Specifies the component's suffix width.
 */

:host {
  @apply block;
}

// scales
:host([scale="s"]) {
  & input,
  & .prefix,
  & .suffix {
    @apply text-n2h h-6 px-2;
  }
  & .number-button-wrapper,
  & .action-wrapper calcite-button,
  & .action-wrapper calcite-button button {
    @apply h-6;
  }
  & .clear-button {
    min-block-size: theme("spacing.6");
    min-inline-size: theme("spacing.6");
  }
}

:host([scale="m"]) {
  & input,
  & .prefix,
  & .suffix {
    @apply text-n1h h-8 px-3;
  }
  & .number-button-wrapper,
  & .action-wrapper calcite-button,
  & .action-wrapper calcite-button button {
    @apply h-8;
  }
  & .clear-button {
    min-block-size: theme("spacing.8");
    min-inline-size: theme("spacing.8");
  }
}

:host([scale="l"]) {
  & input,
  & .prefix,
  & .suffix {
    @apply text-0h h-11 px-4;
  }
  & .number-button-wrapper,
  & .action-wrapper calcite-button,
  & .action-wrapper calcite-button button {
    @apply h-11;
  }
  & .clear-button {
    min-block-size: theme("spacing.11");
    min-inline-size: theme("spacing.11");
  }
}

@include disabled();

input {
  transition:
    var(--calcite-animation-timing),
    block-size 0,
    outline-offset 0s;
  -webkit-appearance: none;
  @apply bg-foreground-1
    box-border
    flex
    flex-1
    font-inherit
    font-normal
    m-0
    max-h-full
    max-w-full
    relative
    rounded-none
    text-color-1
    text-ellipsis
    w-full;

  &:placeholder-shown {
    @apply text-ellipsis;
  }
}

// states
input {
  @apply text-color-1
    border-color-input
    border
    border-solid;
  &::placeholder,
  &:-ms-input-placeholder,
  &::-ms-input-placeholder {
    @apply text-color-3 font-normal;
  }
}
input:focus {
  @apply border-color-brand text-color-1;
}
input[readonly] {
  @apply bg-background font-medium;
}
input[readonly]:focus {
  @apply text-color-1;
}
calcite-icon {
  @apply text-color-3;
}

//focus
input {
  @apply focus-base;
}

input:focus {
  @apply focus-inset;
}

:host([status="invalid"]) {
  & input {
    @apply border-color-danger;
  }
  & input:focus {
    @apply focus-inset-danger;
  }
}

// ICONS

// position icons

:host([scale="s"]) .icon {
  inset-inline-start: theme("spacing.2");
}

:host([scale="m"]) .icon {
  inset-inline-start: theme("spacing.3");
}

:host([scale="l"]) .icon {
  inset-inline-start: theme("spacing.4");
}

// position placeholder/value text in relation to icons

:host([icon][scale="s"]) input {
  padding-inline-start: theme("padding.8");
}

:host([icon][scale="m"]) input {
  padding-inline-start: theme("padding.10");
}

:host([icon][scale="l"]) input {
  padding-inline-start: theme("padding.14");
}

// positioning wrapper for icon and loader

.element-wrapper {
  @apply relative
    order-3
    inline-flex
    flex-1
    items-center;
}

.icon {
  @apply transition-default
    pointer-events-none
    absolute
    block

    z-default; // needed for firefox to display the icon properly
}

.clear-button {
  pointer-events: initial;
  @apply focus-base
    border-color-input
    bg-foreground-1
    order-4
    m-0
    box-border
    flex
    min-h-full
    cursor-pointer
    items-center
    justify-center
    self-stretch
    border
    border-solid;

  border-inline-start-width: theme("borderWidth.0");

  &:hover {
    @apply bg-foreground-2 transition-default;
    calcite-icon {
      @apply text-color-1 transition-default;
    }
  }
  &:active {
    @apply bg-foreground-3;
    calcite-icon {
      @apply text-color-1;
    }
  }
  &:focus {
    @apply focus-inset;
  }
  &:disabled {
    @apply opacity-disabled;
  }
}

// loading
.loader {
  inset-block-start: 1px;
  inset-inline: 1px;
  @apply pointer-events-none
    absolute
    block;
}

// slotted action
.action-wrapper {
  @apply order-7 flex;
}

// prefix and suffix
.prefix,
.suffix {
  @apply border-color-input
    bg-background
    text-color-2
    box-border
    flex
    h-auto
    min-h-full
    select-none
    content-center
    items-center
    break-words
    border
    border-solid
    font-medium
    leading-none;
}

.prefix {
  @apply order-2;
  border-inline-end-width: theme("borderWidth.0");
  inline-size: var(--calcite-input-prefix-size, auto);
}
.suffix {
  @apply order-5;
  border-inline-start-width: theme("borderWidth.0");
  inline-size: var(--calcite-input-suffix-size, auto);
}

// alignment type
:host([alignment="start"]) {
  & input {
    text-align: start;
  }
}

:host([alignment="end"]) {
  & input {
    text-align: end;
  }
}

.number-button-wrapper {
  @apply transition-default
    pointer-events-none
    order-6
    box-border
    flex
    flex-col;
}

:host([number-button-type="vertical"]) .wrapper {
  flex-direction: row;
  display: flex;
}

:host([number-button-type="vertical"]) {
  & input {
    @apply order-2;
  }
}

:host([number-button-type="horizontal"]) .calcite--rtl {
  & .number-button-item[data-adjustment="down"] calcite-icon {
    transform: rotate(-90deg);
  }
  & .number-button-item[data-adjustment="up"] calcite-icon {
    transform: rotate(-90deg);
  }
}

.number-button-item.number-button-item--horizontal {
  &[data-adjustment="down"],
  &[data-adjustment="up"] {
    @apply order-1
      max-h-full
      min-h-full
      self-stretch;
    & calcite-icon {
      transform: rotate(90deg);
    }
  }
}

.number-button-item.number-button-item--horizontal[data-adjustment="down"] {
  @apply border-color-input
    border
    border-solid;
  border-inline-end-width: theme("borderWidth.0");
  &:hover {
    @apply bg-foreground-2;
    calcite-icon {
      @apply text-color-1;
    }
  }
}

.number-button-item.number-button-item--horizontal[data-adjustment="up"] {
  @apply order-5;
  &:hover {
    @apply bg-foreground-2;
    calcite-icon {
      @apply text-color-1;
    }
  }
}

:host([number-button-type="vertical"]) .number-button-item[data-adjustment="down"]:hover {
  @apply bg-foreground-2;
  calcite-icon {
    @apply text-color-1;
  }
}

:host([number-button-type="vertical"]) .number-button-item[data-adjustment="up"]:hover {
  @apply bg-foreground-2;
  calcite-icon {
    @apply text-color-1;
  }
}

:host([number-button-type="vertical"]) .number-button-item[data-adjustment="down"] {
  @apply border-t-0;
}

.number-button-item {
  max-block-size: 50%;
  min-block-size: 50%;
  pointer-events: initial;
  @apply border-color-input
    bg-foreground-1
    transition-default
    m-0
    box-border
    flex
    cursor-pointer
    items-center
    self-center
    border
    border-solid
    py-0
    px-2;
  border-inline-start-width: theme("borderWidth.0");
  & calcite-icon {
    @apply transition-default pointer-events-none;
  }
  &:focus {
    @apply bg-foreground-2;
    calcite-icon {
      @apply text-color-1;
    }
  }
  &:active {
    @apply bg-foreground-3;
  }
  &:disabled {
    @apply pointer-events-none;
  }
}

.wrapper {
  @apply relative
    flex
    flex-row
    items-center;
}

:host(.no-bottom-border) input {
  @apply border-b-0;
}

:host(.border-top-color-one) input {
  @apply border-t-color-1;
}

// input needed for higher specificity of these overrides
input {
  &.inline-child {
    @apply transition-default bg-transparent;
    .editing-enabled {
      background-color: inherit;
    }
  }

  &.inline-child:not(.editing-enabled) {
    @apply border-color-transparent
    flex
    cursor-pointer text-ellipsis;
    padding-inline-start: 0;
  }
}

@include form-validation-message();
@include hidden-form-input();
@include base-component();
@include input-placeholder-text();
