/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-filter-background-color: Specifies the component's background color.
 * @prop --calcite-filter-border-color: Specifies the component's border color.
 * @prop --calcite-filter-text-color: Specifies the component's text color.
 * @prop --calcite-filter-text-color-hover: Specifies the component's text color when hovered.
 */

:host {
  @extend %component-host;
  @apply flex w-full;
}

@include disabled();

.container {
  @apply flex w-full;
}

:host([scale="s"]) {
  .container {
    padding: var(--calcite-spacing-sm);
  }
}
:host([scale="m"]) {
  .container {
    padding: var(--calcite-spacing-md);
  }
}
:host([scale="l"]) {
  .container {
    padding: var(--calcite-spacing-lg);
  }
}

label {
  @apply relative
    my-0
    flex w-full
    items-center
    overflow-hidden;
}

input[type="text"] {
  @apply font-inherit
    text-n2h
    mb-1
    w-full
    border-none
    py-1;

  background-color: var(--calcite-filter-background-color, transparent);
  color: var(--calcite-filter-text-color, var(--calcite-color-text-1));
  padding-inline-end: theme("spacing.1");
  padding-inline-start: theme("spacing.6");
  transition:
    padding var(--calcite-animation-timing),
    box-shadow var(--calcite-animation-timing);
  &::-ms-clear {
    @apply hidden;
  }
}

calcite-input {
  @apply w-full;
}

.search-icon {
  @apply absolute
    flex;

  color: var(--calcite-filter-text-color, var(--calcite-color-text-2));
  inset-inline-start: 0;
  transition:
    inset-inline-start var(--calcite-animation-timing),
    inset-inline-end var(--calcite-animation-timing),
    opacity var(--calcite-animation-timing);
}

input[type="text"]:focus {
  @apply outline-none;

  border-color: var(--calcite-filter-border-color, var(--calcite-color-brand));
  padding-inline: theme("padding.1");
  & ~ .search-icon {
    inset-inline-start: calc(theme("spacing.4") * -1);
    @apply opacity-0;
  }
}

.clear-button {
  @apply flex
    cursor-pointer
    items-center
    border-0;

  background-color: var(--calcite-filter-background-color, transparent);
  &:hover,
  &:focus {
    color: var(--calcite-filter-text-color-hover, var(--calcite-color-text-1));
  }
  color: var(--calcite-filter-text-color, var(--calcite-color-text-2));
}

@include base-component();
