/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-background-color-hover: Specifies the component's background color when hovered or focused.
 * @prop --calcite-action-background-color-press: Specifies the component's background color when active.
 * @prop --calcite-action-background-color-pressed: [Deprecated] Use --calcite-action-background-color-press. Specifies the component's background color when active.
 * @prop --calcite-action-background-color: Specifies the component's background color.
 * @prop --calcite-action-corner-radius-end-end: [Deprecated] Use --calcite-action-corner-radius. Specifies the component's corner radius end end.
 * @prop --calcite-action-corner-radius-end-start: [Deprecated] Use --calcite-action-corner-radius. Specifies the component's corner radius end start.
 * @prop --calcite-action-corner-radius-start-end: [Deprecated] Use --calcite-action-corner-radius. Specifies the component's corner radius start end.
 * @prop --calcite-action-corner-radius-start-start: [Deprecated] Use --calcite-action-corner-radius. Specifies the component's corner radius start start.
 * @prop --calcite-action-corner-radius: Specifies the component's corner radius.
 * @prop --calcite-action-indicator-color: Specifies the component's indicator color.
 * @prop --calcite-action-text-color-press: Specifies the component's text color when hovered.
 * @prop --calcite-action-text-color-pressed: [Deprecated] Use --calcite-action-text-color-press. Specifies the component's text color when hovered.
 * @prop --calcite-action-text-color: Specifies the component's text color.
 */

:host {
  @extend %component-host;
  @apply flex bg-transparent cursor-pointer;
  --calcite-internal-action-text-color: var(--calcite-color-text-3);
}

:host([drag-handle]) {
  @apply cursor-move;
  --calcite-internal-action-text-color: var(--calcite-color-border-input);
  --calcite-internal-action-padding-inline: var(--calcite-spacing-xxs);
}

:host,
.button {
  border-radius: var(
    --calcite-action-corner-radius,
    var(--calcite-action-corner-radius-start-start, var(--calcite-corner-radius))
      var(--calcite-action-corner-radius-start-end, var(--calcite-corner-radius))
      var(--calcite-action-corner-radius-end-end, var(--calcite-corner-radius))
      var(--calcite-action-corner-radius-end-start, var(--calcite-corner-radius))
  );
}

@mixin action-indicator() {
  position: relative;
  &::after {
    content: "";
    @apply absolute
      h-2
      w-2
      rounded-full;
    inset-block-end: calc(-0.275rem);
    inset-inline-end: calc(-0.275rem);
    background-color: var(--calcite-action-indicator-color, theme("colors.brand"));
  }
}

.button {
  @apply focus-base
    text-n2h
    relative
    m-0
    flex
    w-auto
    items-center
    justify-start
    border-none
    font-medium
    font-sans;

  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
  color: var(--calcite-action-text-color, var(--calcite-internal-action-text-color));
  text-align: unset;
  flex: 1 0 auto;
  cursor: inherit;

  &:hover,
  &:focus {
    background-color: var(--calcite-action-background-color-hover, var(--calcite-color-foreground-2));
    color: var(
      --calcite-action-text-color-press,
      var(--calcite-action-text-color-pressed, var(--calcite-color-text-1))
    );
  }

  &:focus {
    @apply focus-inset;
  }

  &:active {
    background-color: var(
      --calcite-action-background-color-press,
      var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3))
    );
  }
}

.icon-container {
  @apply pointer-events-none
    m-0
    flex
    items-center
    justify-center;
  min-inline-size: theme("spacing.4");
  min-block-size: theme("spacing.6");
}

.text-container {
  @apply m-0
    w-0
    truncate
    leading-6
    opacity-0
    transition-opacity
    duration-150
    ease-in-out;

  transition-property: margin;
  transition-property: inline-size;
}

.text-container--visible {
  @apply w-auto flex-auto opacity-100;
}

:host([active]) {
  .button {
    &,
    &:hover,
    &:focus {
      color: var(
        --calcite-action-text-color-press,
        var(--calcite-action-text-color-pressed, var(--calcite-color-text-1))
      );
      background-color: var(
        --calcite-action-background-color-press,
        var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3))
      );
    }

    &:active {
      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
    }
  }
}

:host([loading]) {
  .button {
    &:hover,
    &:focus {
      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
    }
  }

  .text-container {
    @apply opacity-disabled;
  }

  calcite-loader[inline] {
    margin-inline-end: theme("spacing.0");
  }
}

:host([appearance="transparent"]) {
  &:host([active]) .button {
    background-color: var(--calcite-color-transparent-hover);
  }

  .button {
    @apply bg-transparent
      transition-shadow
      duration-150
      ease-in-out;

    &:hover,
    &:focus {
      background-color: var(--calcite-color-transparent-hover);
    }

    &:active {
      background-color: var(--calcite-color-transparent-press);
    }
  }
}

:host([data-active]) .button {
  @apply focus-inset;
}

:host([scale="s"]) {
  .button {
    @apply text-n2h font-normal;
    padding-inline: var(--calcite-internal-action-padding-inline, theme("spacing.2"));
    padding-block: var(--calcite-internal-action-padding-block, var(--calcite-spacing-xxs));
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.2");
  }
}

:host([scale="m"]) {
  .button {
    @apply text-n1h font-normal;
    padding-inline: var(--calcite-internal-action-padding-inline, theme("spacing.4"));
    padding-block: var(--calcite-internal-action-padding-block, var(--calcite-spacing-md));
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.3");
  }
}

:host([scale="l"]) {
  .button {
    @apply text-0h font-normal;
    padding-inline: var(--calcite-internal-action-padding-inline, theme("spacing.5"));
    padding-block: var(--calcite-internal-action-padding-block, var(--calcite-spacing-xl));
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.4");
  }
}

:host([alignment="center"]) .button {
  @apply justify-center;
}

:host([alignment="end"]) .button {
  @apply justify-end;
}

:host([alignment="center"]),
:host([alignment="end"]) {
  .button .text-container--visible {
    @apply flex-initial;
  }
}

/* [Deprecated]  Compact */
:host([scale="s"][compact]) .button,
:host([scale="m"][compact]) .button,
:host([scale="l"][compact]) .button {
  @apply px-0;
}

.slot-container {
  @apply flex;
}

.slot-container--hidden {
  @apply hidden;
}

.button--text-visible {
  @apply w-full;
}

.indicator-with-icon {
  @include action-indicator();
}

.indicator-without-icon {
  @apply w-4 mx-1;
  @include action-indicator();
}

.indicator-text {
  @apply sr-only;
}

@include base-component();
@include disabled {
  .button,
  .button:hover,
  .button:focus {
    @apply opacity-disabled cursor-default;
    background-color: var(
      --calcite-action-background-color,
      var(--calcite-action-background-color, var(--calcite-color-foreground-1))
    );
  }

  &:host([active]) {
    .button,
    .button:hover,
    .button:focus {
      @apply opacity-disabled;
      background-color: var(
        --calcite-action-background-color-press,
        var(
          --calcite-action-background-color-press,
          var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3))
        )
      );
    }
  }
}
