// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-color-picker-min-width

:host {
  @apply text-n2h inline-block font-normal;

  inline-size: var(--calcite-internal-color-picker-min-width);
  min-inline-size: var(--calcite-internal-color-picker-min-width);
}

@include disabled();

:host([scale="s"]) {
  --calcite-internal-color-picker-min-width: 200px;
  --calcite-color-picker-spacing: 8px;
}

:host([scale="m"]) {
  --calcite-internal-color-picker-min-width: 240px;
  --calcite-color-picker-spacing: 12px;
}

:host([scale="l"]) {
  --calcite-internal-color-picker-min-width: 304px;
  --calcite-color-picker-spacing: 16px;

  @apply text-n1h;

  .section {
    &:first-of-type {
      padding-block-start: var(--calcite-color-picker-spacing);
    }
  }

  .control-section {
    @apply flex flex-col flex-wrap items-baseline;
  }

  .color-hex-options {
    inline-size: 100%;

    @apply flex
      flex-shrink
      flex-col
      justify-around;
  }

  .color-mode-container {
    flex-shrink: 3;
  }
}

.container {
  @apply bg-foreground-1;
  display: flex;
  flex-direction: column;
  block-size: min-content;
  border: 1px solid var(--calcite-color-border-1);
}

.control-and-scope {
  @apply flex relative cursor-pointer touch-none;
}

.color-field,
.control-and-scope {
  user-select: none;
}

.scope {
  @apply text-n1
    focus-base
    absolute
    z-default
    rounded-full
    bg-transparent
    w-px
    h-px
    pointer-events-none;
  &:focus {
    @apply focus-outset;
    outline-offset: 6px;
  }
}

.hex-and-channels-group {
  @apply flex flex-col flex-wrap w-full;
}

.section {
  padding-block: 0 var(--calcite-color-picker-spacing);
  padding-inline: var(--calcite-color-picker-spacing);

  &:first-of-type {
    padding-block-start: var(--calcite-color-picker-spacing);
  }
}

.sliders {
  @apply flex flex-col justify-between;
  margin-inline-start: var(--calcite-color-picker-spacing);
  gap: var(--calcite-spacing-xxs);
}

.preview-and-sliders {
  @apply flex items-center;
  padding: var(--calcite-color-picker-spacing);
}

.color-hex-options,
.section--split {
  flex-grow: 1;
}

.header {
  @apply text-color-1
    flex
    items-center
    justify-between;
}

.color-mode-container {
  padding-block-start: var(--calcite-color-picker-spacing);
}

.channels {
  @apply flex;
}

.channel {
  flex-grow: 1;
  &[data-channel-index="3"] {
    margin-inline-start: -1px;
    min-inline-size: 81px;
  }
}

:host([scale="s"]) {
  .channel {
    &[data-channel-index="3"] {
      min-inline-size: 68px;
    }
  }
}

:host([scale="l"]) {
  .channel {
    &[data-channel-index="3"] {
      min-inline-size: 88px;
    }
  }
}

.saved-colors-buttons {
  display: flex;
}

.swatch-group {
  margin-block-start: var(--calcite-spacing-md);
}

@include base-component();
