/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-color-picker-background-color: Specifies the component's background color.
 * @prop --calcite-color-picker-border-color: Specifies the component's border color.
 * @prop --calcite-color-picker-corner-radius: Specifies the component's corner radius.
 * @prop --calcite-color-picker-shadow: Specifies the component's shadow.
 * @prop --calcite-color-picker-text-color: Specifies the component's text color.
 * @prop --calcite-color-picker-input-background-color: Specifies the component's input background color.
 * @prop --calcite-color-picker-input-border-color: Specifies the component's input border color.
 * @prop --calcite-color-picker-input-text-color: Specifies the component's input text color.
 * @prop --calcite-color-picker-input-prefix-background-color:  Specifies the component's input prefix background color, when present.
 * @prop --calcite-color-picker-input-prefix-text-color:  Specifies the component's input prefix text color, when present.
 * @prop --calcite-color-picker-input-suffix-background-color:  Specifies the component's input suffix background color, when present.
 * @prop --calcite-color-picker-input-suffix-text-color:  Specifies the component's input suffix text color, when present.
 * @prop --calcite-color-picker-tab-border-color: Specifies the component's tab border color.
 * @prop --calcite-color-picker-tab-text-color: Specifies the component's tab text color.
 * @prop --calcite-color-picker-tab-accent-color-press: Specifies the component's tab accent color when selected or active.
 * @prop --calcite-color-picker-swatch-corner-radius: Specifies the component's swatch corner radius.
 * @prop --calcite-color-picker-action-text-color-press: Specifies the component's `savedColors` action text color when hovered.
 * @prop --calcite-color-picker-action-text-color-hover: Specifies the component's `savedColors` action text color when pressed.
 * @prop --calcite-color-picker-action-text-color: Specifies the component's `savedColors` action text color.
 */

// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-color-picker-min-width

calcite-input-number {
  --calcite-input-number-background-color: var(--calcite-color-picker-input-background-color);
  --calcite-input-number-border-color: var(--calcite-color-picker-input-border-color);
  --calcite-input-number-text-color: var(--calcite-color-picker-input-text-color);
  --calcite-input-prefix-background-color: var(--calcite-color-picker-input-prefix-background-color);
  --calcite-input-prefix-text-color: var(--calcite-color-picker-input-prefix-text-color);
  --calcite-input-suffix-background-color: var(--calcite-color-picker-input-suffix-background-color);
  --calcite-input-suffix-text-color: var(--calcite-color-picker-input-suffix-text-color);
}

calcite-button {
  --calcite-button-text-color: var(--calcite-color-picker-action-text-color);
  --calcite-button-text-color-press: var(--calcite-color-picker-action-text-color-press);
  --calcite-button-background-color: var(--calcite-color-picker-action-background-color);
}

calcite-button:hover,
calcite-button:focus {
  --calcite-button-text-color: var(--calcite-color-picker-action-text-color-hover);
}

calcite-button:active {
  --calcite-button-text-color: var(--calcite-color-picker-action-text-color-press);
}

calcite-tabs {
  --calcite-tab-border-color: var(--calcite-color-picker-tab-border-color);
  --calcite-tab-text-color: var(--calcite-color-picker-tab-text-color);
  --calcite-tab-border-color: var(--calcite-color-picker-tab-border-color);
  --calcite-tab-accent-color-press: var(--calcite-color-picker-tab-accent-color);
  --calcite-swatch-corner-radius: var(--calcite-color-picker-swatch-corner-radius);
  --calcite-tab-text-color: var(--calcite-color-picker-tab-text-color);
}

calcite-tab-title:hover {
  // override here for tab title - issue #todo
  --calcite-color-text-1: var(--calcite-color-picker-tab-text-color-hover);
}

calcite-swatch {
  --calcite-swatch-corner-radius: var(--calcite-color-picker-swatch-corner-radius);
}
:host {
  @apply text-n2h inline-block font-normal;
  inline-size: var(--calcite-internal-color-picker-min-width);
  min-inline-size: var(--calcite-internal-color-picker-min-width);
}

@include disabled();

:host([scale="s"]) {
  --calcite-internal-color-picker-min-width: 200px;
  --calcite-color-picker-spacing: var(--calcite-spacing-sm);
}

:host([scale="m"]) {
  --calcite-internal-color-picker-min-width: 240px;
  --calcite-color-picker-spacing: var(--calcite-spacing-md);
}

:host([scale="l"]) {
  --calcite-internal-color-picker-min-width: 304px;
  --calcite-color-picker-spacing: var(--calcite-spacing-lg);

  @apply text-n1h;

  .section {
    &:first-of-type {
      padding-block-start: var(--calcite-color-picker-spacing);
    }
  }

  .control-section {
    @apply flex flex-col flex-wrap items-baseline;
  }

  .color-hex-options {
    inline-size: 100%;

    @apply flex
      flex-shrink
      flex-col
      justify-around;
  }

  .color-mode-container {
    flex-shrink: 3;
  }
}

.container {
  display: flex;
  flex-direction: column;
  block-size: min-content;
  border: 1px solid var(--calcite-color-picker-border-color, var(--calcite-color-border-1));
  background-color: var(--calcite-color-picker-background-color, var(--calcite-color-foreground-1));
  border-radius: var(--calcite-color-picker-corner-radius, var(--calcite-corner-radius-none));
  box-shadow: var(--calcite-color-picker-shadow, var(--calcite-shadow-none));
}

.control-and-scope {
  @apply flex relative cursor-pointer touch-none;
}

.color-field,
.control-and-scope {
  user-select: none;
  border-radius: var(--calcite-color-picker-corner-radius, var(--calcite-corner-radius-none))
    var(--calcite-color-picker-corner-radius, var(--calcite-corner-radius-none)) var(--calcite-corner-radius-none)
    var(--calcite-corner-radius-none);
}

.scope {
  @apply text-n1
    focus-base
    absolute
    z-default
    rounded-full
    bg-transparent
    w-px
    h-px
    pointer-events-none;
  &:focus {
    @apply focus-outset;
    outline-offset: 6px;
  }
}

.hex-and-channels-group {
  @apply flex flex-col flex-wrap w-full;
}

.section {
  padding-block: 0 var(--calcite-color-picker-spacing);
  padding-inline: var(--calcite-color-picker-spacing);

  &:first-of-type {
    padding-block-start: var(--calcite-color-picker-spacing);
  }
}

.sliders {
  @apply flex flex-col justify-between;
  margin-inline-start: var(--calcite-color-picker-spacing);
  gap: var(--calcite-spacing-xxs);
}

.preview-and-sliders {
  @apply flex items-center;
  padding: var(--calcite-color-picker-spacing);
}

.color-hex-options,
.section--split {
  flex-grow: 1;
}

.header {
  @apply flex
    items-center
    justify-between;
  color: var(--calcite-color-picker-text-color, var(--calcite-color-text-1));
}

.color-mode-container {
  padding-block-start: var(--calcite-color-picker-spacing);
}

.channels {
  @apply flex;
}

.channel {
  flex-grow: 1;
  &[data-channel-index="3"] {
    margin-inline-start: -1px;
    min-inline-size: 81px;
  }
}

:host([scale="s"]) {
  .channel {
    &[data-channel-index="3"] {
      min-inline-size: 68px;
    }
  }
}

:host([scale="l"]) {
  .channel {
    &[data-channel-index="3"] {
      min-inline-size: 88px;
    }
  }
}

.saved-colors-buttons {
  display: flex;
}

.swatch-group {
  margin-block-start: var(--calcite-color-picker-spacing);
}

@include base-component();
