/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-dialog-scrim-background-color: Specifies the background color of the component's scrim.
 * @prop --calcite-dialog-size-x: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Does not exceed the viewport's width - applies when `placement="cover"` is set.
 * @prop --calcite-dialog-min-size-x: Specifies the minimum width of the component, using `px`, `em`, `rem`, `vw`, or `%`.
 * @prop --calcite-dialog-max-size-x: Specifies the maximum width of the component, using `px`, `em`, `rem`, `vw`, or `%`.
 * @prop --calcite-dialog-size-y: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Does not exceed the viewport's height - applies when `placement="cover"` is set.
 * @prop --calcite-dialog-min-size-y: Specifies the minimum height of the component, using `px`, `em`, `rem`, `vh`, or `%`.
 * @prop --calcite-dialog-max-size-y: Specifies the maximum height of the component, using `px`, `em`, `rem`, `vh`, or `%`.
 * @prop --calcite-dialog-content-space: Specifies the padding of the component's content.
 * @prop --calcite-dialog-footer-space: Specifies the padding of the component's footer.
 * @prop --calcite-dialog-border-color: Specifies the component's border color.
 * @prop --calcite-dialog-offset-x: Specifies the horizontal offset of the component.
 * @prop --calcite-dialog-offset-y: Specifies the vertical offset of the component.
 * @prop --calcite-dialog-background-color: Specifies the background color of the component.
 */

:host {
  // the dialog should always use a dark scrim, regardless of light / dark mode - matches value in global.scss
  --calcite-dialog-scrim-background-color: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};
  @apply flex
    inset-0
    z-overlay
    pointer-events-none;
  --calcite-internal-dialog-animation-offset: 20px;
}

:host([modal]) {
  @apply absolute;
}

.container {
  @apply text-color-2
    pointer-events-auto
    fixed
    inset-0
    flex
    items-center
    justify-center
    overflow-hidden
    opacity-0
    z-overlay;
  visibility: hidden;
  transition:
    visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
}

:host([placement="top"]) .container {
  @apply justify-center
    items-start;
}

:host([placement="top-start"]) .container {
  @apply justify-start
    items-start;
}

:host([placement="top-end"]) .container {
  @apply justify-end
    items-start;
}

:host([placement="bottom"]) .container {
  @apply justify-center
    items-end;
}

:host([placement="bottom-start"]) .container {
  @apply justify-start
    items-end;
}

:host([placement="bottom-end"]) .container {
  @apply justify-end
    items-end;
}

:host(:not([modal])) .container {
  @apply pointer-events-none;
}

:host([scale="s"]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-sm));
  --calcite-internal-dialog-min-size-x: 198px;
  --calcite-internal-dialog-min-size-y: 140px;
}

:host([scale="m"]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-md));
  --calcite-internal-dialog-min-size-x: 288px;
  --calcite-internal-dialog-min-size-y: 180px;
}

:host([scale="l"]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-lg));
  --calcite-internal-dialog-min-size-x: 388px;
  --calcite-internal-dialog-min-size-y: 220px;
}

.scrim {
  // todo: remove once https://github.com/Esri/calcite-design-system/pull/9816 is merged
  --calcite-scrim-background: var(--calcite-dialog-scrim-background-color, var(--calcite-color-transparent-scrim));
  --calcite-scrim-background-color: var(
    --calcite-dialog-scrim-background-color,
    var(--calcite-color-transparent-scrim)
  );
  @apply fixed
    inset-0
    flex
    overflow-y-hidden;
}

calcite-panel {
  --calcite-panel-content-space: var(--calcite-dialog-content-space, var(--calcite-internal-dialog-content-padding));
  --calcite-panel-footer-space: var(--calcite-dialog-footer-space);
  --calcite-panel-border-color: var(--calcite-dialog-border-color);
  --calcite-panel-background-color: var(--calcite-dialog-background-color, var(--calcite-color-foreground-1));
}

.dialog {
  @apply pointer-events-none
    m-6
    box-border
    flex
    w-full
    flex-col
    opacity-0
    shadow-2-sm
    z-modal
    rounded
    relative;
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  transition:
    inset-block var(--calcite-internal-animation-timing-slow) $easing-function,
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;

  min-inline-size: var(--calcite-dialog-min-size-x, var(--calcite-internal-dialog-min-size-x));
  max-inline-size: var(--calcite-dialog-max-size-x, 100%);
  min-block-size: var(--calcite-dialog-min-size-y, var(--calcite-internal-dialog-min-size-y));
  max-block-size: var(--calcite-dialog-max-size-y, 100%);

  // these internal vars allow handling the animation when an offset is being used.
  --calcite-internal-dialog-hidden-position: calc(
    var(--calcite-dialog-offset-y, 0px) + var(--calcite-internal-dialog-animation-offset)
  );
  --calcite-internal-dialog-shown-position: var(--calcite-dialog-offset-y, 0);

  inset-inline-start: var(--calcite-dialog-offset-x, 0);
  inset-block-start: var(--calcite-internal-dialog-hidden-position);

  &--opening {
    &-active {
      inset-block-start: var(--calcite-internal-dialog-shown-position);
    }
  }
}

:host([menu-open]) .dialog {
  transition:
    visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
}

.panel {
  @apply rounded;
}

.container--open {
  @apply opacity-100;
  visibility: visible;
  transition-delay: 0ms;
  .dialog {
    @apply pointer-events-auto
      visible
      opacity-100;
    transition:
      inset-block var(--calcite-internal-animation-timing-slow) $easing-function,
      opacity var(--calcite-internal-animation-timing-slow) $easing-function;
    transition-delay: 0ms;
  }
}

/**
 * Sizes
 */
@mixin dialog-size($size, $width) {
  .width-#{$size} {
    inline-size: var(--calcite-dialog-size-x, $width);
    block-size: var(--calcite-dialog-size-y, auto);
  }

  @media screen and (max-width: $width + 2 * $baseline) {
    .width-#{$size} {
      @apply m-0
          h-full
          max-h-full
          w-full
          max-w-full;
      inset-inline-start: 0;
      inset-block-start: var(--calcite-internal-dialog-animation-offset);
    }
    .width-#{$size}.dialog {
      &--opening {
        &-active {
          inset-block-start: 0;
        }
      }
    }
  }
}

.width-s {
  @apply w-auto;
}

@include dialog-size("s", 32rem);
@include dialog-size("m", 48rem);
@include dialog-size("l", 94rem);

/**
 * placement="cover"
 */
:host([placement="cover"]) {
  .dialog {
    @apply m-0
      max-h-full
      max-w-full
      h-full
      w-full
      rounded-none;
  }
  .panel {
    @apply rounded-none;
  }
}

/**
 * Kinds
 */
:host([kind]) .panel {
  @apply rounded-t-none;
}
:host([kind="brand"]) .dialog {
  @apply border-color-brand;
}

:host([kind="danger"]) .dialog {
  @apply border-color-danger;
}

:host([kind="info"]) .dialog {
  @apply border-color-info;
}

:host([kind="success"]) .dialog {
  @apply border-color-success;
}

:host([kind="warning"]) .dialog {
  @apply border-color-warning;
}

:host([kind="brand"][open]),
:host([kind="danger"][open]),
:host([kind="info"][open]),
:host([kind="success"][open]),
:host([kind="warning"][open]) {
  .dialog {
    @apply border-0
      border-t-4
      border-solid;
  }
}

.container--embedded {
  position: absolute;
  pointer-events: auto;
  calcite-scrim {
    position: absolute;
  }
}

.assistive-text {
  @apply sr-only;
}

@include base-component();
