/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-accordion-border-color: [Deprecated] Use `--calcite-accordion-item-border-color`. Specifies the component's border color.
 * @prop --calcite-accordion-item-background-color: Specifies the component's background color.
 * @prop --calcite-accordion-item-border-color: Specifies the component's border color.
 * @prop --calcite-accordion-item-icon-color-end: Specifies the component's `iconEnd` color. Falls back to `--calcite-accordion-item-icon-color` or current color.
 * @prop --calcite-accordion-item-icon-color-start: Specifies the component's `iconStart` color. Falls back to `--calcite-accordion-item-icon-color` or current color.
 * @prop --calcite-accordion-item-content-space: Specifies the component's padding.
 * @prop --calcite-accordion-item-end-icon-color: [Deprecated] Use `--calcite-accordion-item-icon-color-end`. Specifies the component's `iconEnd` color. Falls back to `--calcite-accordion-item-icon-color` or current color.
 * @prop --calcite-accordion-item-expand-icon-color: Specifies the component's expand icon color.
 * @prop --calcite-accordion-item-header-background-color: Specifies the component's `heading` background color.
 * @prop --calcite-accordion-item-heading-text-color: Specifies the component's `heading` text color.
 * @prop --calcite-accordion-item-icon-color: Specifies the component's default icon color.
 * @prop --calcite-accordion-item-start-icon-color: [Deprecated] Use `--calcite-accordion-item-icon-color-start`. Specifies the component's `iconStart` color. Falls back to `--calcite-accordion-item-icon-color` or current color.
 * @prop --calcite-accordion-item-text-color: Specifies the component's text color.
 * @prop --calcite-accordion-text-color-hover: [Deprecated] Use `--calcite-accordion-item-text-color-hover`. Specifies the component's main text color on hover.
 * @prop --calcite-accordion-text-color-pressed: [Deprecated] Use `--calcite-accordion-item-text-color-press`. Specifies the component's main text color when pressed.
 * @prop --calcite-accordion-text-color: [Deprecated] Use `--calcite-accordion-item-text-color`. Specifies the component's text color.
 */

%icon-position {
  /* icon rotation variables */
  --calcite-internal-accordion-item-icon-rotation: calc(theme("rotate.90") * -1);
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.90");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: theme("rotate.0");
}

:host {
  @apply relative
    flex
    flex-col
    no-underline;

  color: var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)));
  background-color: var(--calcite-accordion-item-background-color);
  border-width: 0;

  .header {
    background-color: var(--calcite-accordion-item-header-background-color);
  }
}

// icon position variants for child
.icon-position--start {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row-reverse;
  --calcite-internal-accordion-item-icon-spacing-start: 0;
  --calcite-internal-accordion-item-icon-spacing-end: var(--calcite-internal-accordion-icon-margin);
}

.icon-position--end {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row;
  --calcite-internal-accordion-item-icon-spacing-start: var(--calcite-internal-accordion-icon-margin);
  --calcite-internal-accordion-item-icon-spacing-end: 0;
}

.icon-position--end:not(.icon-type--plus-minus) {
  --calcite-internal-accordion-item-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.180");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: calc(theme("rotate.180") * -1);
}

// .header / content
.content,
.header {
  border-block-end-width: var(--calcite-border-width-sm);
  border-block-end-style: solid;
  border-color: var(
    --calcite-accordion-item-border-color,
    var(--calcite-accordion-border-color, theme("borderColor.color.2"))
  );
}

.header-content {
  padding: var(
    --calcite-internal-accordion-item-padding,
    var(--calcite-internal-accordion-item-spacing-unit, theme("spacing.2") 0.75rem)
  );
}

.content {
  padding: var(
    --calcite-accordion-item-content-space,
    var(
      --calcite-internal-accordion-item-padding,
      var(--calcite-internal-accordion-item-spacing-unit, theme("spacing.2") 0.75rem)
    )
  );
}

.header {
  @apply flex items-stretch;

  &-content,
  &-container,
  .actions-start,
  .actions-end {
    @apply flex
      items-center
      duration-150
      ease-in-out;
    @include word-break();
  }
}

.header-content {
  @apply focus-base flex-grow cursor-pointer;
  flex-direction: var(--calcite-internal-accordion-item-flex-direction);
  color: var(--calcite-accordion-item-heading-text-color, var(--calcite-accordion-text-color, inherit));

  &:focus {
    @apply focus-inset;
  }

  // Deprecated
  &:focus,
  &:hover,
  &:active {
    color: var(
      --calcite-accordion-item-heading-text-color,
      var(--calcite-accordion-text-color-hover, var(--calcite-color-text-2))
    );

    .heading {
      color: var(
        --calcite-accordion-item-heading-text-color,
        var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1))
      );
    }
  }
}

.header-container {
  inline-size: 100%;
}

// accordion item title
.header-text {
  @apply my-0 flex-grow flex-col py-0;
  text-align: initial;
  margin-inline-end: theme("margin.auto");
}

.heading,
.description {
  @apply flex w-full;
}

.heading {
  @apply font-medium;
}

.actions-start,
.actions-end {
  ::slotted(calcite-action) {
    @apply self-stretch;
  }
}

.icon {
  @apply duration-150
    ease-in-out
    flex
    items-center;
  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-start);
  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-end);
}

.icon--start {
  color: var(
    --calcite-accordion-item-icon-color-start,
    var(--calcite-accordion-item-start-icon-color, var(--calcite-accordion-item-icon-color, currentColor))
  );
  margin-inline-end: var(--calcite-internal-accordion-icon-margin);
}

.icon--end {
  color: var(
    --calcite-accordion-item-icon-color-end,
    var(--calcite-accordion-item-end-icon-color, var(--calcite-accordion-item-icon-color, currentColor))
  );
  margin-inline-end: var(--calcite-internal-accordion-icon-margin);
  margin-inline-start: var(--calcite-internal-accordion-icon-margin);
}

// accordion item icon
.expand-icon {
  color: var(
    --calcite-accordion-item-expand-icon-color,
    var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)))
  );
  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-start);
  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-end);
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation));
}

.calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation-rtl));
}

.description {
  @apply mt-1;
}

.content {
  @apply hidden;
  text-align: initial;
}

:host(:not(:focus):not(:hover):not([expanded])) {
  .heading {
    color: var(
      --calcite-accordion-item-heading-text-color,
      var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2))
    );
  }
}

:host([expanded]) {
  color: var(
    --calcite-accordion-item-text-color,
    var(--calcite-accordion-text-color, var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1)))
  );

  .header {
    border-block-end-color: transparent;
  }

  .expand-icon {
    color: var(
      --calcite-accordion-item-expand-icon-color,
      var(
        --calcite-accordion-item-text-color,
        var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))
      )
    );
    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation));
  }
  .calcite--rtl .expand-icon {
    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation-rtl));
  }

  .description {
    color: var(
      --calcite-accordion-item-text-color,
      var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))
    );
  }

  .content {
    @apply block;
  }
}

@media (forced-colors: active) {
  :host([expanded]) {
    & .header {
      border-block-end: none;
    }
    & .heading {
      /** give visual indicator of expanded state since subtle color changes can't be done **/
      font-weight: bolder;
    }
  }
  .header-content:hover,
  .header-content:focus {
    & .heading {
      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/
      text-decoration: underline;
    }
  }
}

@include base-component();
