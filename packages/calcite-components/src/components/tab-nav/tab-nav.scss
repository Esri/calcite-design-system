/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-tab-background-color: When `calcite-tabs` is `bordered`, specifies the component's background color.
 * @prop --calcite-tab-border-color: When `calcite-tabs` is `bordered`, specifies the component's border color.
 * @prop --calcite-tab-text-color: Specifies the component's `iconStart, `iconEnd`, and text color.
 */

// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-button-border-inline-end-color
// --calcite-internal-button-border-inline-start-color
// --calcite-internal-tab-nav-button-width
// --calcite-internal-tab-nav-gap

@use "../../styles/includes";
@use "@esri/calcite-design-tokens/dist/scss/core";


:host {
  @apply relative flex;
}

:host([bordered]) {
  .scroll-button--forward {
    calcite-button {
      --calcite-internal-button-border-inline-end-color: var(--calcite-tab-border-color, var(--calcite-color-border-1));
    }
  }

  .scroll-button--backward {
    calcite-button {
      --calcite-internal-button-border-inline-start-color: var(
        --calcite-tab-border-color,
        var(--calcite-color-border-1)
      );
    }
  }
}

.scale-s {
  --calcite-internal-tab-nav-button-width: #{core.$calcite-size-24};
  min-block-size: theme("spacing.6");
}

.scale-m {
  --calcite-internal-tab-nav-button-width: #{core.$calcite-size-32};
  min-block-size: theme("spacing.8");
}

.scale-l {
  --calcite-internal-tab-nav-button-width: #{core.$calcite-size-44};
  min-block-size: theme("spacing.11");
}

.container::-webkit-scrollbar {
  display: none;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

:host([layout="center"]) {
  ::slotted(calcite-tab-title) {
    display: flex;
    flex-grow: 1;
    flex-shrink: 0;
    min-inline-size: auto;
    white-space: nowrap;
  }

  ::slotted(calcite-tab-title[selected]) {
    overflow: unset;
  }
}

:host(:not([bordered])) {
  .scale-l {
    --calcite-internal-tab-nav-gap: var(--calcite-spacing-xxl);
  }
  .scale-m {
    --calcite-internal-tab-nav-gap: var(--calcite-spacing-xl);
  }
  .scale-s {
    --calcite-internal-tab-nav-gap: var(--calcite-spacing-lg);
  }

  .tab-titles-slot-wrapper {
    gap: var(--calcite-internal-tab-nav-gap);
  }
}

:host([layout="center"]:not([bordered])) {
  .tab-titles-slot-wrapper {
    padding-inline: var(--calcite-spacing-xl);
  }
}

.tab-titles-slot-wrapper {
  @apply flex-1;
}

.container,
.tab-titles-slot-wrapper {
  @apply flex w-full
  justify-start
  whitespace-nowrap
  overflow-hidden;
}

.scroll-button {
  @apply absolute bottom-0 top-0;

  calcite-button {
    --calcite-button-text-color: var(--calcite-tab-text-color, var(--calcite-color-text-3));
    --calcite-button-background-color: var(--calcite-color-transparent);
    --calcite-offset-invert-focus: 1;
    block-size: var(--calcite-container-size-content-fluid);
  }
}

.scroll-button-container {
  @apply flex;
  inset-block-start: var(--calcite-border-width-md);
  inset-block-end: var(--calcite-border-width-md);
  inset-inline-end: 0;
  inline-size: calc(2 * var(--calcite-internal-tab-nav-button-width));
}

.scroll-button--forward {
  inset-inline-end: 0;
  z-index: var(--calcite-z-index);
}

.scroll-button--backward {
  inset-inline-end: var(--calcite-internal-tab-nav-button-width);
  z-index: var(--calcite-z-index);
}

:host(:not([bordered])) {
  .scroll-button--backward {
    &::before {
      background-color: var(--calcite-tab-border-color, var(--calcite-color-border-3));
      content: "";
      inline-size: var(--calcite-border-width-sm);
      inset-block-start: var(--calcite-border-width-md);
      inset-block-end: var(--calcite-border-width-md);
      position: absolute;
      inset-inline-start: 0;
    }
  }
}

@include includes.base-component();
