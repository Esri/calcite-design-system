/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-tab-background-color: When `bordered`, specifies the component's background color.
 * @prop --calcite-tab-border-color: Specifies the component's border color.
 */

@use "../../styles/includes";

:host {
  @apply flex flex-col;
}

:host([bordered]) {
  box-shadow: inset 0 1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1));
  background-color: var(--calcite-tab-background-color, var(--calcite-color-foreground-1));

  section {
    border-color: var(--calcite-tab-border-color, var(--calcite-color-border-1));
    border-style: solid;
  }
}

section {
  @apply border flex flex-grow overflow-hidden;

  border-block-start-style: solid;
  border-block-start-color: var(--calcite-tab-border-color, var(--calcite-color-border-1));
}

:host([bordered][position="bottom"]) {
  box-shadow:
    inset 0 1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1)),
    inset 0 -1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1));
}

:host([bordered]:not([position="bottom"])) ::slotted(calcite-tab-nav) {
  margin-block-end: -1px;
}

:host([position="bottom"]) {
  @apply flex-col-reverse;

  section {
    @apply flex-col-reverse
      border-t-0
      border-b;
  }
}

:host([bordered][scale="s"]) section {
  @apply p-3;
}

:host([bordered][scale="m"]) section {
  @apply p-2;
}

:host([bordered][scale="l"]) section {
  @apply p-4;
}

:host([position="bottom"]:not([bordered])) section {
  border-block-end-style: solid;
  border-block-end-color: var(--calcite-tab-border-color, var(--calcite-color-border-1));
}

@media (forced-colors: active) {
  :host([bordered]) section {
    @apply border-t-0
      border-b;
  }
  :host([position="bottom"][bordered]) section {
    @apply border-t
      border-b-0;
  }
}

@include includes.base-component();
