// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-split-button-divider-border-color
// --calcite-internal-split-button-divider-color

@use "../../assets/styles/includes";
/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-split-button-background-color: Specifies the component's background color.
 * @prop --calcite-split-button-border-color: Specifies the component's border color.
 * @prop --calcite-split-button-corner-radius: Specifies the component's corner radius.
 * @prop --calcite-split-button-icon-color: Specifies the component's `iconStart` and/or `iconEnd` color.
 * @prop --calcite-split-button-loader-color: Specifies the component's loader color.
 * @prop --calcite-split-button-text-color: Specifies the component's text color.
 * @prop --calcite-split-button-shadow: Specifies the component's shadow.
 * @prop --calcite-split-button-divider-border-color: Specifies the component's divider border color.
 * @prop --calcite-split-button-divider-color: Specifies the component's divider color.
 * @prop --calcite-split-button-dropdown-width: Specifies the width of the component's dropdown.
 * @prop --calcite-split-button-dropdown-background-color: Specifies the component's dropdown background color.
**/

:host {
  @apply inline-block;
}

:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-2/4;
}

:host([width="full"]) {
  @apply w-full;
}

:host([kind="brand"]) {
  --calcite-internal-split-button-divider-border-color: var(--calcite-color-brand);
  --calcite-internal-split-button-divider-color: var(--calcite-color-foreground-1);
}

:host([kind="danger"]) {
  --calcite-internal-split-button-divider-border-color: var(--calcite-color-status-danger);
  --calcite-internal-split-button-divider-color: var(--calcite-color-foreground-1);
}

:host([kind="neutral"]) {
  --calcite-internal-split-button-divider-border-color: var(--calcite-color-foreground-3);
  --calcite-internal-split-button-divider-color: var(--calcite-color-text-1);
}

:host([kind="inverse"]) {
  --calcite-internal-split-button-divider-border-color: var(--calcite-color-inverse);
  --calcite-internal-split-button-divider-color: var(--calcite-color-foreground-1);
}

:host([appearance="transparent"]) {
  --calcite-internal-split-button-divider-border-color: transparent;
  &:host([kind="brand"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-brand);
  }
  &:host([kind="danger"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-status-danger);
  }
  &:host([kind="neutral"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-text-1);
  }
  &:host([kind="inverse"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-foreground-1);
  }
}

:host([appearance="outline"]) {
  &:host([kind="brand"]),
  &:host([kind="danger"]),
  &:host([kind="neutral"]),
  &:host([kind="inverse"]) {
    --calcite-internal-split-button-divider-border-color: transparent;
  }
}

:host([appearance="outline-fill"]) {
  &:host([kind="brand"]),
  &:host([kind="danger"]),
  &:host([kind="neutral"]),
  &:host([kind="inverse"]) {
    --calcite-internal-split-button-divider-border-color: var(--calcite-color-background);
  }
}

:host([appearance="outline"]),
:host([appearance="outline-fill"]) {
  &:host([kind="brand"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-brand);
  }
  &:host([kind="danger"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-status-danger);
  }
  &:host([kind="neutral"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-border-1);
  }
  &:host([kind="inverse"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-inverse);
  }
}

.container {
  @apply flex items-stretch;
  > calcite-dropdown > calcite-button {
    @apply h-full align-top;
  }
}

.divider-container {
  @apply transition-default flex w-px items-stretch;
  background-color: var(
    --calcite-split-button-divider-color,
    var(--calcite-internal-split-button-divider-border-color)
  );
}

.divider {
  @apply my-1 inline-block w-px;
  background-color: var(
    --calcite-split-button-divider-border-color,
    var(--calcite-internal-split-button-divider-color)
  );
}

:host([appearance="outline-fill"]),
:host([appearance="outline"]) {
  .divider-container {
    border-block: 1px solid var(--calcite-internal-split-button-divider-color);
  }
  &:hover .divider-container {
    background-color: var(--calcite-internal-split-button-divider-color);
  }
}

:host([appearance="outline-fill"]:hover),
:host([appearance="outline"]:hover) {
  .divider-container {
    background-color: var(--calcite-internal-split-button-divider-color);
  }
}

:host([appearance="outline-fill"]:focus-within),
:host([appearance="outline"]:focus-within) {
  &:host([kind="brand"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-brand-press);
  }
  &:host([kind="danger"]) {
    --calcite-internal-split-button-divider-color: var(--calcite-color-danger-press);
  }
  .divider-container {
    background-color: var(--calcite-internal-split-button-divider-color);
  }
}

calcite-button[split-child="primary"],
calcite-button[split-child="secondary"] {
  --calcite-button-background-color: var(--calcite-split-button-background-color);
  --calcite-button-border-color: var(--calcite-split-button-border-color);
  --calcite-button-text-color: var(--calcite-split-button-text-color);
  --calcite-button-icon-color: var(--calcite-split-button-icon-color);
  --calcite-button-loading-color: var(--calcite-split-button-loading-color);
  --calcite-button-shadow: var(--calcite-split-button-shadow);
}

calcite-button[split-child="primary"] {
  --calcite-button-corner-radius: var(--calcite-split-button-corner-radius) var(--calcite-corner-radius-none)
    var(--calcite-corner-radius-none) var(--calcite-split-button-corner-radius);
}

calcite-button[split-child="secondary"] {
  --calcite-button-corner-radius: var(--calcite-corner-radius-none) var(--calcite-split-button-corner-radius)
    var(--calcite-split-button-corner-radius) var(--calcite-corner-radius-none);
}

calcite-dropdown {
  --calcite-dropdown-shadow: var(--calcite-split-button-dropdown-shadow);
  --calcite-dropdown-background-color: var(--calcite-split-button-dropdown-background-color);
  --calcite-dropdown-width: var(--calcite-split-button-dropdown-width);
}

@include includes.disabled() {
  calcite-dropdown > calcite-button {
    @apply pointer-events-none;
  }
  &:host([appearance="outline-fill"]) .divider-container {
    background-color: var(--calcite-color-background);
  }
  &:host([appearance="outline"]) .divider-container {
    background-color: transparent;
  }
}
@include includes.base-component();
