/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-combobox-divider-color: Specifies the component's divider color.
 * @prop --calcite-combobox-icon-color: Specifies the component's icon color.
 * @prop --calcite-combobox-icon-color-hover: Specifies the component's icon color when hovered.
 * @prop --calcite-combobox-background-color: Specifies the background color of the component's listbox.
 * @prop --calcite-combobox-input-border-color: Specifies the border color of the component's input.
 * @prop --calcite-combobox-input-background-color: Specifies the background color of the component's input.
 * @prop --calcite-combobox-input-height: Specifies the height of the component's input.
 * @prop --calcite-combobox-input-text-color: When `selectionDisplay` is `"single"`, specifies the text color of the component's input.
 */

// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-close-size
// --calcite-internal-combobox-input-margin-block
// --calcite-internal-combobox-spacing-unit-l
// --calcite-internal-combobox-spacing-unit-s

:host {
  @apply block;
}

:host([scale="s"]) {
  @apply text-n2;
  --calcite-internal-combobox-spacing-unit-l: theme("spacing.2");
  --calcite-internal-combobox-spacing-unit-s: theme("spacing.1");
  --calcite-combobox-input-height: theme("spacing.4");
  --calcite-internal-combobox-input-margin-block: calc(theme("spacing.1") - theme("borderWidth.DEFAULT"));
  --calcite-internal-close-size: 1rem;

  .x-button {
    margin-inline: theme("spacing.2");
  }
}

:host([scale="m"]) {
  @apply text-n1;
  --calcite-internal-combobox-spacing-unit-l: theme("spacing.3");
  --calcite-internal-combobox-spacing-unit-s: theme("spacing.2");
  --calcite-combobox-input-height: theme("spacing.4");
  --calcite-internal-combobox-input-margin-block: calc(theme("spacing.2") - theme("borderWidth.DEFAULT"));
  --calcite-internal-close-size: 1.5rem;

  .x-button {
    margin-inline-end: theme("spacing.3");
  }
}

:host([scale="l"]) {
  @apply text-0;
  --calcite-internal-combobox-spacing-unit-l: theme("spacing.4");
  --calcite-internal-combobox-spacing-unit-s: theme("spacing.3");
  --calcite-combobox-input-height: theme("spacing.6");
  --calcite-internal-combobox-input-margin-block: calc(theme("spacing[2.5]") - theme("borderWidth.DEFAULT"));
  --calcite-internal-close-size: 2rem;

  .x-button {
    margin-inline-end: theme("spacing.4");
  }
}

.x-button {
  align-self: center;
}

.wrapper {
  @apply focus-base flex border border-solid;
  padding-block: calc(var(--calcite-internal-combobox-spacing-unit-s) / 4);
  padding-inline: var(--calcite-internal-combobox-spacing-unit-l);

  background-color: var(--calcite-combobox-input-background-color, var(--calcite-color-foreground-1));
  color: var(--calcite-combobox-input-text-color, var(--calcite-color-text-1));
  border-color: var(--calcite-combobox-input-border-color, var(--calcite-color-border-input));

  &:hover {
    .icon {
      color: var(--calcite-combobox-icon-color-hover, var(--calcite-color-text-1));
    }
  }
}

:host(:focus-within) .wrapper,
.wrapper--active {
  @apply focus-inset;
}

:host([read-only]) {
  .wrapper {
    background-color: var(--calcite-color-background);
  }

  .label {
    font-weight: var(--calcite-font-weight-medium);
  }
}

:host([status="invalid"]) .wrapper {
  @apply border-color-danger;
}

:host([status="invalid"]:focus-within) .wrapper {
  @apply focus-inset-danger;
}

.wrapper--single {
  padding-block: 0;
  padding-inline: var(--calcite-internal-combobox-spacing-unit-l);
  @apply cursor-pointer flex-nowrap;
}

.grid-input {
  @apply flex flex-grow flex-wrap items-center truncate p-0;

  gap: var(--calcite-internal-combobox-spacing-unit-s);
  margin-inline-end: var(--calcite-internal-combobox-spacing-unit-s);

  &.selection-display--fit,
  &.selection-display--single {
    @apply flex-nowrap overflow-hidden;
  }
}

.input {
  @apply appearance-none bg-transparent border-none flex-grow font-inherit text-color-1 text-ellipsis overflow-hidden p-0;
  font-size: inherit;
  block-size: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
  inline-size: 100%;
  margin-block-end: var(--calcite-internal-combobox-spacing-unit-s);
  min-inline-size: 4.8125rem;

  &:focus {
    @apply outline-none;
  }

  &:placeholder-shown {
    @apply text-ellipsis;
  }
}

.input--single {
  @apply p-0;
  margin-block: var(--calcite-internal-combobox-input-margin-block);
}

.wrapper--active .input-single {
  @apply cursor-text;
}

.input--hidden {
  @apply pointer-events-none w-0 min-w-0 opacity-0;
}

.input--icon {
  padding-block: 0;
  padding-inline: var(--calcite-internal-combobox-spacing-unit-l);
}

.placeholder-icon {
  color: var(--calcite-combobox-icon-color, var(--calcite-color-text-3));
}

.input-wrap {
  @apply flex flex-grow items-center;
}

.input-wrap--single {
  @apply flex-1 overflow-hidden;
}

.label {
  @apply pointer-events-none max-w-full flex-auto truncate p-0 font-normal;
  block-size: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
}

.label--icon {
  padding-inline: var(--calcite-internal-combobox-spacing-unit-l);
}

.icon-end,
.icon-start {
  @apply flex cursor-pointer items-center;
}

.icon-end {
  @apply flex-none;

  .icon {
    color: var(--calcite-combobox-icon-color, var(--calcite-color-text-3));
  }
}

.floating-ui-container {
  --calcite-floating-ui-z-index: theme("zIndex.dropdown");
  @include floating-ui-container();
}

@include floating-ui-elem-anim(".floating-ui-container");

@media (forced-colors: active) {
  .wrapper,
  .floating-ui-container {
    border: 1px solid canvasText;
  }
}

.screen-readers-only {
  @apply sr-only;
}

.list-container {
  @apply max-h-menu overflow-y-auto;
  inline-size: var(--calcite-dropdown-width, 100%);
  background-color: var(--calcite-combobox-background-color, var(--calcite-color-foreground-1));
}

.list {
  @apply m-0 block p-0;
}

.list--hide {
  @apply h-0 overflow-hidden;
}

calcite-chip {
  --calcite-animation-timing: 0;
}

.chip {
  margin-block: calc(var(--calcite-internal-combobox-spacing-unit-s) / 4);
  max-inline-size: 100%;
}

.chip--invisible {
  @apply absolute invisible;
}

.item {
  @apply block;
}

.select-all {
  background-color: var(--calcite-combobox-item-background-color-active, var(--calcite-color-foreground-1));
  border-block-end-color: var(
    --calcite-combobox-divider-color,
    var(--calcite-combobox-item-border-color, var(--calcite-color-border-3))
  );
  border-block-end-style: solid;
  border-block-end-width: var(--calcite-border-width-sm);
  inset-block-start: 0;
  position: sticky;
  z-index: var(--calcite-z-index-sticky);
}

.no-matches {
  padding-block: var(--calcite-internal-combobox-spacing-unit-s);
  padding-inline: var(--calcite-internal-combobox-spacing-unit-l);

  color: var(--calcite-combobox-input-text-color, var(--calcite-color-text-1));
  background: var(--calcite-combobox-background-color, var(--calcite-color-foreground-1));
  cursor: pointer;
}

.no-matches-placeholder {
  color: var(--calcite-combobox-icon-color, var(--calcite-color-text-3));
  cursor: default;
}

@include disabled();
@include x-button(
  $background-color: "var(--calcite-close-background-color, var(--calcite-color-foreground-2))",
  $background-color-hover: "var(--calcite-close-background-color-hover, var(--calcite-color-foreground-3))",
  $color: "var(--calcite-close-icon-color, var(--calcite-color-text-3))"
);
@include form-validation-message();
@include hidden-form-input();
@include base-component();
@include text-highlight-item();

::slotted(calcite-combobox-item-group:not(:first-child)) {
  padding-block-start: var(--calcite-internal-combobox-spacing-unit-l);
}

@include input-placeholder-text();
