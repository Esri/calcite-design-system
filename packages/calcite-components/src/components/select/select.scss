/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-select-font-size: Specifies the font size of `calcite-option`s in the component.
 * @prop --calcite-select-text-color: Specifies the text color of `calcite-option`s in the component.
 * @prop --calcite-select-border-color: Specifies the component's border color.
 * @prop --calcite-select-icon-color: Specifies the component's icon color.
 * @prop --calcite-select-icon-color-hover: Specifies the component's icon color when hovered or active.
 * @prop --calcite-select-background-color: Specifies the component's background color.
 * @prop --calcite-select-corner-radius: Specifies the component's corner radius.
 * @prop --calcite-select-shadow: Specifies the component's shadow.
 */

// AUTO-GENERATED â€” do not modify. Changes will be overwritten.
//
// Internal CSS custom properties for component use only. Overwriting is not recommended.
//
// --calcite-internal-select-block-size
// --calcite-internal-select-font-size
// --calcite-internal-select-icon-container-padding-inline

:host {
  @extend %component-spacing;
  @apply flex flex-col;
  font-size: var(--calcite-select-font-size);
  font-weight: var(--calcite-internal-select-font-weight, var(--calcite-font-weight-regular));
}

.wrapper {
  @apply relative flex items-stretch;
  inline-size: var(--select-width);
  block-size: var(--calcite-internal-select-block-size, #{$calcite-size-32});
  &:focus-within,
  &:active,
  &:hover {
    .icon {
      color: var(--calcite-select-icon-color-hover, var(--calcite-color-text-1));
    }
  }
}

@include disabled();

:host([scale="s"]) {
  --calcite-internal-select-font-size: theme("fontSize.n2h");
  --calcite-select-spacing-inline: theme("spacing.2") theme("spacing.8");
  --calcite-internal-select-icon-container-padding-inline: var(--calcite-spacing-sm);
  --calcite-internal-select-block-size: #{$calcite-size-24};
}

:host([scale="m"]) {
  --calcite-internal-select-font-size: theme("fontSize.n1h");
  --calcite-select-spacing-inline: theme("spacing.3") theme("spacing.10");
  --calcite-internal-select-icon-container-padding-inline: var(--calcite-spacing-md);
}

:host([scale="l"]) {
  --calcite-internal-select-font-size: theme("fontSize.0h");
  --calcite-select-spacing-inline: theme("spacing.4") theme("spacing.12");
  --calcite-internal-select-icon-container-padding-inline: var(--calcite-spacing-lg);
  --calcite-internal-select-block-size: #{$calcite-size-44};
}

:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-1/2;
}

:host([width="full"]) {
  @apply w-full;
}

.select {
  @apply font-inherit
    focus-base
    m-0
    box-border
    w-full
    cursor-pointer
    appearance-none
    truncate
    border-solid;
  font-weight: inherit;
  font-size: var(--calcite-select-font-size, var(--calcite-internal-select-font-size));
  color: var(--calcite-select-text-color, var(--calcite-color-text-2));
  border-color: var(--calcite-select-border-color, var(--calcite-color-border-input));
  border-width: var(--calcite-select-internal-border-width, var(--calcite-border-width-sm));
  padding-inline: var(--calcite-select-spacing-inline);
  padding-block: var(--calcite-internal-select-spacing-block);
  border-inline-end-width: 0;
  line-height: var(--calcite-internal-select-line-height, normal);
  background-color: var(--calcite-select-background-color, var(--calcite-color-foreground-1));
  border-radius: var(--calcite-select-corner-radius, var(--calcite-corner-radius-none));
  box-shadow: var(--calcite-select-shadow, var(--calcite-shadow-small));
  &:focus {
    @apply focus-inset;
  }
}

// override user agent stylesheet disabled styling
select:disabled {
  @apply border-color-input bg-opacity-100;
}

.icon-container {
  @apply border-color-input text-color-2 pointer-events-none absolute inset-y-0 flex items-center border-0 border-solid bg-transparent;
  inset-inline-end: theme("inset.0");
  border-start-start-radius: var(--calcite-select-corner-radius, var(--calcite-corner-radius-none));
  border-start-end-radius: var(--calcite-select-corner-radius, var(--calcite-corner-radius-none));
  border-end-start-radius: var(--calcite-select-corner-radius, var(--calcite-corner-radius-none));
  border-end-end-radius: var(--calcite-select-corner-radius, var(--calcite-corner-radius-none));
  border-color: var(--calcite-select-border-color, var(--calcite-color-border-input));
  border-inline-width: 0 var(--calcite-select-internal-icon-border-inline-end-width, var(--calcite-border-width-sm));
  padding-inline: var(--calcite-internal-select-icon-container-padding-inline);
  .icon {
    color: var(--calcite-select-icon-color, var(--calcite-color-text-3));
  }
}

:host([status="invalid"]) {
  select,
  .icon-container {
    @apply border-color-danger;
  }

  select:focus,
  .icon-container:focus {
    @apply focus-inset-danger;
  }
}

.select:focus ~ .icon-container {
  @apply border-color-transparent;
}

@include form-internal-label();
@include form-validation-message();
@include hidden-form-input();
@include base-component();
